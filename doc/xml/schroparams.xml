<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="schroedinger-schroparams">
<refmeta>
<refentrytitle role="top_of_page" id="schroedinger-schroparams.top_of_page">schroparams</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  SCHROEDINGER Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>schroparams</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="schroedinger-schroparams.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>struct              <link linkend="SchroVideoFormat">SchroVideoFormat</link>;
struct              <link linkend="SchroParams">SchroParams</link>;
struct              <link linkend="SchroMotionVector">SchroMotionVector</link>;
struct              <link linkend="SchroMotionField">SchroMotionField</link>;
struct              <link linkend="SchroGlobalMotion">SchroGlobalMotion</link>;
typedef             <link linkend="SchroPictureNumber">SchroPictureNumber</link>;
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="schro-params-calculate-iwt-sizes">schro_params_calculate_iwt_sizes</link>    (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="schro-params-calculate-mc-sizes">schro_params_calculate_mc_sizes</link>     (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="schro-params-set-block-params">schro_params_set_block_params</link>       (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> index</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="schro-params-set-default-codeblock">schro_params_set_default_codeblock</link>  (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="schro-params-get-block-params">schro_params_get_block_params</link>       (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="schro-params-get-frame-format">schro_params_get_frame_format</link>       (<parameter><link linkend="int"><type>int</type></link> depth</parameter>,
                                                         <parameter><link linkend="SchroChromaFormat"><type>SchroChromaFormat</type></link> chroma_format</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="schro-params-init">schro_params_init</link>                   (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> video_format</parameter>);
<link linkend="schro-bool"><returnvalue>schro_bool</returnvalue></link>          <link linkend="schro-params-is-default-codeblock">schro_params_is_default_codeblock</link>   (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);
<link linkend="schro-bool"><returnvalue>schro_bool</returnvalue></link>          <link linkend="schro-params-is-default-quant-matrix">schro_params_is_default_quant_matrix</link>
                                                        (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="schro-params-set-default-quant-matrix">schro_params_set_default_quant_matrix</link>
                                                        (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="schro-params-verify-block-params">schro_params_verify_block_params</link>    (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="schroedinger-schroparams.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="schroedinger-schroparams.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="SchroVideoFormat" role="struct">
<title>struct SchroVideoFormat</title>
<indexterm zone="SchroVideoFormat"><primary>SchroVideoFormat</primary></indexterm>
<programlisting>struct SchroVideoFormat {
  SchroVideoFormatEnum index;
  int width;
  int height;
  SchroChromaFormat chroma_format;

  schro_bool interlaced;
  schro_bool top_field_first;

  int frame_rate_numerator;
  int frame_rate_denominator;
  int aspect_ratio_numerator;
  int aspect_ratio_denominator;

  int clean_width;
  int clean_height;
  int left_offset;
  int top_offset;

  int luma_offset;
  int luma_excursion;
  int chroma_offset;
  int chroma_excursion;

  SchroColourPrimaries colour_primaries;
  SchroColourMatrix colour_matrix;
  SchroTransferFunction transfer_function;

  int interlaced_coding;

  int unused0;
  int unused1;
  int unused2;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="SchroParams" role="struct">
<title>struct SchroParams</title>
<indexterm zone="SchroParams"><primary>SchroParams</primary></indexterm>
<programlisting>struct SchroParams {
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="SchroMotionVector" role="struct">
<title>struct SchroMotionVector</title>
<indexterm zone="SchroMotionVector"><primary>SchroMotionVector</primary></indexterm>
<programlisting>struct SchroMotionVector {
  unsigned int pred_mode : 2;
  unsigned int using_global : 1;
  unsigned int split : 2;
  unsigned int unused : 3;
  unsigned int scan : 8;
  uint32_t metric;
  uint32_t chroma_metric;
  union {
    struct {
      int16_t dx[2];
      int16_t dy[2];
    } vec;
    struct {
      int16_t dc[3];
    } dc;
  } u;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="SchroMotionField" role="struct">
<title>struct SchroMotionField</title>
<indexterm zone="SchroMotionField"><primary>SchroMotionField</primary></indexterm>
<programlisting>struct SchroMotionField {
  int x_num_blocks;
  int y_num_blocks;
  SchroMotionVector *motion_vectors;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="SchroGlobalMotion" role="struct">
<title>struct SchroGlobalMotion</title>
<indexterm zone="SchroGlobalMotion"><primary>SchroGlobalMotion</primary></indexterm>
<programlisting>struct SchroGlobalMotion {
  int b0;
  int b1;
  int a_exp;
  int a00;
  int a01;
  int a10;
  int a11;
  int c_exp;
  int c0;
  int c1;
};
</programlisting>
<para>
</para></refsect2>
<refsect2 id="SchroPictureNumber" role="typedef">
<title>SchroPictureNumber</title>
<indexterm zone="SchroPictureNumber"><primary>SchroPictureNumber</primary></indexterm>
<programlisting>typedef uint32_t SchroPictureNumber;
</programlisting>
<para>
</para></refsect2>
<refsect2 id="schro-params-calculate-iwt-sizes" role="function">
<title>schro_params_calculate_iwt_sizes ()</title>
<indexterm zone="schro-params-calculate-iwt-sizes"><primary>schro_params_calculate_iwt_sizes</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                schro_params_calculate_iwt_sizes    (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);</programlisting>
<para>
Calculates the size of the array used for wavelet transformation
using the current video format and transformation depth in the
<parameter>params</parameter> structure.  The <parameter>params</parameter> structure is updated with the new
values.
</para>
<para>
The structure fields changed are: iwt_chroma_width, iwt_chroma_height,
iwt_luma_width, iwt_luma_height.
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>pointer to <parameter>SchroParams</parameter> structure</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-params-calculate-mc-sizes" role="function">
<title>schro_params_calculate_mc_sizes ()</title>
<indexterm zone="schro-params-calculate-mc-sizes"><primary>schro_params_calculate_mc_sizes</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                schro_params_calculate_mc_sizes     (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);</programlisting>
<para>
Calculates the size of the array used for motion compensation
using the current video format and motion compensation paramters
in the <parameter>params</parameter> structure.  The <parameter>params</parameter> structure is updated with
the new values.
</para>
<para>
The structure fields changed are: x_num_blocks, y_num_blocks,
mc_luma_width, mc_luma_height, mc_chroma_width, mc_chroma_height,
x_offset, y_offset.
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>pointer to <parameter>SchroParams</parameter> structure</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-params-set-block-params" role="function">
<title>schro_params_set_block_params ()</title>
<indexterm zone="schro-params-set-block-params"><primary>schro_params_set_block_params</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 schro_params_set_block_params       (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> index</parameter>);</programlisting>
<para>
Sets the block parameters for motion compensation in the parameters
structure pointed to by <parameter>params</parameter> to the
standard block parameters given by <parameter>index</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>pointer to SchroParams structure</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara>index to standard block parameters</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-params-set-default-codeblock" role="function">
<title>schro_params_set_default_codeblock ()</title>
<indexterm zone="schro-params-set-default-codeblock"><primary>schro_params_set_default_codeblock</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                schro_params_set_default_codeblock  (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);</programlisting>
<para>
Sets the codeblock parameters in the parameters structure pointed to
by <parameter>params</parameter> to the defaults.
</para><variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>pointer to SchroParams structure</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-params-get-block-params" role="function">
<title>schro_params_get_block_params ()</title>
<indexterm zone="schro-params-get-block-params"><primary>schro_params_get_block_params</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 schro_params_get_block_params       (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="schro-params-get-frame-format" role="function">
<title>schro_params_get_frame_format ()</title>
<indexterm zone="schro-params-get-frame-format"><primary>schro_params_get_frame_format</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 schro_params_get_frame_format       (<parameter><link linkend="int"><type>int</type></link> depth</parameter>,
                                                         <parameter><link linkend="SchroChromaFormat"><type>SchroChromaFormat</type></link> chroma_format</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="schro-params-init" role="function">
<title>schro_params_init ()</title>
<indexterm zone="schro-params-init"><primary>schro_params_init</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                schro_params_init                   (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> video_format</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="schro-params-is-default-codeblock" role="function">
<title>schro_params_is_default_codeblock ()</title>
<indexterm zone="schro-params-is-default-codeblock"><primary>schro_params_is_default_codeblock</primary></indexterm>
<programlisting><link linkend="schro-bool"><returnvalue>schro_bool</returnvalue></link>          schro_params_is_default_codeblock   (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);</programlisting>
<variablelist role="params">
<varlistentry><term><parameter>params</parameter>&#160;:</term>
<listitem><simpara>pointer to SchroParams structure</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>True if the codeblocks in <parameter>params</parameter> are the default codeblocks.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-params-is-default-quant-matrix" role="function">
<title>schro_params_is_default_quant_matrix ()</title>
<indexterm zone="schro-params-is-default-quant-matrix"><primary>schro_params_is_default_quant_matrix</primary></indexterm>
<programlisting><link linkend="schro-bool"><returnvalue>schro_bool</returnvalue></link>          schro_params_is_default_quant_matrix
                                                        (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="schro-params-set-default-quant-matrix" role="function">
<title>schro_params_set_default_quant_matrix ()</title>
<indexterm zone="schro-params-set-default-quant-matrix"><primary>schro_params_set_default_quant_matrix</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                schro_params_set_default_quant_matrix
                                                        (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="schro-params-verify-block-params" role="function">
<title>schro_params_verify_block_params ()</title>
<indexterm zone="schro-params-verify-block-params"><primary>schro_params_verify_block_params</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 schro_params_verify_block_params    (<parameter><link linkend="SchroParams"><type>SchroParams</type></link> *params</parameter>);</programlisting>
<para>
</para></refsect2>

</refsect1>

</refentry>
