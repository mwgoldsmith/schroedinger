<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="schroedinger-schrovideoformat">
<refmeta>
<refentrytitle role="top_of_page" id="schroedinger-schrovideoformat.top_of_page">schrovideoformat</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  SCHROEDINGER Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>schrovideoformat</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="schroedinger-schrovideoformat.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis><link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="schro-video-format-validate">schro_video_format_validate</link>         (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="schro-video-format-set-std-video-format">schro_video_format_set_std_video_format</link>
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>,
                                                         <parameter><link linkend="SchroVideoFormatEnum"><type>SchroVideoFormatEnum</type></link> index</parameter>);
<link linkend="SchroVideoFormatEnum"><returnvalue>SchroVideoFormatEnum</returnvalue></link> <link linkend="schro-video-format-get-std-video-format">schro_video_format_get_std_video_format</link>
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="schro-video-format-set-std-frame-rate">schro_video_format_set_std_frame_rate</link>
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> index</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="schro-video-format-get-std-frame-rate">schro_video_format_get_std_frame_rate</link>
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="schro-video-format-set-std-aspect-ratio">schro_video_format_set_std_aspect_ratio</link>
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> index</parameter>);
<link linkend="int"><returnvalue>int</returnvalue></link>                 <link linkend="schro-video-format-get-std-aspect-ratio">schro_video_format_get_std_aspect_ratio</link>
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="schro-video-format-set-std-signal-range">schro_video_format_set_std_signal_range</link>
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>,
                                                         <parameter><link linkend="SchroSignalRange"><type>SchroSignalRange</type></link> index</parameter>);
<link linkend="SchroSignalRange"><returnvalue>SchroSignalRange</returnvalue></link>    <link linkend="schro-video-format-get-std-signal-range">schro_video_format_get_std_signal_range</link>
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link>                <link linkend="schro-video-format-set-std-colour-spec">schro_video_format_set_std_colour_spec</link>
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>,
                                                         <parameter><link linkend="SchroColourSpec"><type>SchroColourSpec</type></link> index</parameter>);
<link linkend="SchroColourSpec"><returnvalue>SchroColourSpec</returnvalue></link>     <link linkend="schro-video-format-get-std-colour-spec">schro_video_format_get_std_colour_spec</link>
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);
</synopsis>
</refsynopsisdiv>

<refsect1 id="schroedinger-schrovideoformat.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="schroedinger-schrovideoformat.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="schro-video-format-validate" role="function">
<title>schro_video_format_validate ()</title>
<indexterm zone="schro-video-format-validate"><primary>schro_video_format_validate</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 schro_video_format_validate         (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="schro-video-format-set-std-video-format" role="function">
<title>schro_video_format_set_std_video_format ()</title>
<indexterm zone="schro-video-format-set-std-video-format"><primary>schro_video_format_set_std_video_format</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                schro_video_format_set_std_video_format
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>,
                                                         <parameter><link linkend="SchroVideoFormatEnum"><type>SchroVideoFormatEnum</type></link> index</parameter>);</programlisting>
<para>
Initializes the video format structure pointed to by <parameter>format</parameter> to
the standard Dirac video formats specified by <parameter>index</parameter>.
</para></refsect2>
<refsect2 id="schro-video-format-get-std-video-format" role="function">
<title>schro_video_format_get_std_video_format ()</title>
<indexterm zone="schro-video-format-get-std-video-format"><primary>schro_video_format_get_std_video_format</primary></indexterm>
<programlisting><link linkend="SchroVideoFormatEnum"><returnvalue>SchroVideoFormatEnum</returnvalue></link> schro_video_format_get_std_video_format
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);</programlisting>
<para>
In Dirac streams, video formats are encoded by specifying a standard
format, and then modifying that to get the desired video format.  This
function guesses a standard format to use as a starting point for
encoding the video format pointed to by <parameter>format</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>pointer to SchroVideoFormat structure</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>an index to the optimal standard format</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-video-format-set-std-frame-rate" role="function">
<title>schro_video_format_set_std_frame_rate ()</title>
<indexterm zone="schro-video-format-set-std-frame-rate"><primary>schro_video_format_set_std_frame_rate</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                schro_video_format_set_std_frame_rate
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> index</parameter>);</programlisting>
<para>
Sets the frame rate of the video format structure pointed to by
<parameter>format</parameter> to the Dirac standard frame specified by <parameter>index</parameter>.
</para></refsect2>
<refsect2 id="schro-video-format-get-std-frame-rate" role="function">
<title>schro_video_format_get_std_frame_rate ()</title>
<indexterm zone="schro-video-format-get-std-frame-rate"><primary>schro_video_format_get_std_frame_rate</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 schro_video_format_get_std_frame_rate
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);</programlisting>
<para>
In Dirac bitstreams, frame rates can be one of several standard
frame rates, encoded as an index, or the numerator and denominator
of the framerate can be encoded directly.  This function looks up
the frame rate contained in the video format structure <parameter>format</parameter> in
the list of standard frame rates.  If the frame rate is a standard
frame rate, the corresponding index is returned, otherwise 0 is
returned.
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>index to a standard Dirac frame rate, or 0 if the frame rate
is custom.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-video-format-set-std-aspect-ratio" role="function">
<title>schro_video_format_set_std_aspect_ratio ()</title>
<indexterm zone="schro-video-format-set-std-aspect-ratio"><primary>schro_video_format_set_std_aspect_ratio</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                schro_video_format_set_std_aspect_ratio
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>,
                                                         <parameter><link linkend="int"><type>int</type></link> index</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="schro-video-format-get-std-aspect-ratio" role="function">
<title>schro_video_format_get_std_aspect_ratio ()</title>
<indexterm zone="schro-video-format-get-std-aspect-ratio"><primary>schro_video_format_get_std_aspect_ratio</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 schro_video_format_get_std_aspect_ratio
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="schro-video-format-set-std-signal-range" role="function">
<title>schro_video_format_set_std_signal_range ()</title>
<indexterm zone="schro-video-format-set-std-signal-range"><primary>schro_video_format_set_std_signal_range</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                schro_video_format_set_std_signal_range
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>,
                                                         <parameter><link linkend="SchroSignalRange"><type>SchroSignalRange</type></link> index</parameter>);</programlisting>
<para>
Sets the signal range of the video format structure to one of the
standard values indicated by <parameter>index</parameter>.
</para></refsect2>
<refsect2 id="schro-video-format-get-std-signal-range" role="function">
<title>schro_video_format_get_std_signal_range ()</title>
<indexterm zone="schro-video-format-get-std-signal-range"><primary>schro_video_format_get_std_signal_range</primary></indexterm>
<programlisting><link linkend="SchroSignalRange"><returnvalue>SchroSignalRange</returnvalue></link>    schro_video_format_get_std_signal_range
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);</programlisting>
<para>
In Dirac bitstreams, signal ranges can be one of several standard
signal ranges, encoded as an index, or the extents of the signal
range can be encoded directly.  This function looks up
the signal range contained in the video format structure <parameter>format</parameter> in
the list of standard signal ranges.  If the signal range is
a standard signal range, the corresponding index is returned,
otherwise 0 is returned.
</para><variablelist role="params">
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>pointer to SchroVideoFormat structure</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>index to standard signal range, or 0 if there is no
corresponding standard signal range.</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-video-format-set-std-colour-spec" role="function">
<title>schro_video_format_set_std_colour_spec ()</title>
<indexterm zone="schro-video-format-set-std-colour-spec"><primary>schro_video_format_set_std_colour_spec</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link>                schro_video_format_set_std_colour_spec
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>,
                                                         <parameter><link linkend="SchroColourSpec"><type>SchroColourSpec</type></link> index</parameter>);</programlisting>
<para>
Sets the colour specification of the video format structure to one of the
standard values indicated by <parameter>index</parameter>.
</para><variablelist role="params">
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>pointer to SchroVideoFormat structure</simpara></listitem></varlistentry>
<varlistentry><term><parameter>index</parameter>&#160;:</term>
<listitem><simpara>index to standard colour specification</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2 id="schro-video-format-get-std-colour-spec" role="function">
<title>schro_video_format_get_std_colour_spec ()</title>
<indexterm zone="schro-video-format-get-std-colour-spec"><primary>schro_video_format_get_std_colour_spec</primary></indexterm>
<programlisting><link linkend="SchroColourSpec"><returnvalue>SchroColourSpec</returnvalue></link>     schro_video_format_get_std_colour_spec
                                                        (<parameter><link linkend="SchroVideoFormat"><type>SchroVideoFormat</type></link> *format</parameter>);</programlisting>
<para>
In Dirac bitstreams, colour specifications can be one of several standard
colour specifications, encoded as an index, or the individual parts of
the colour specication can be encoded.  This function looks up
the colour specification contained in the video format structure <parameter>format</parameter> in
the list of standard colour specifications.  If the colour specification is
a standard colour specification, the corresponding index is returned,
otherwise 0 is returned.
</para><variablelist role="params">
<varlistentry><term><parameter>format</parameter>&#160;:</term>
<listitem><simpara>pointer to SchroVideoFormat structure</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara>index to standard colour specification, or 0 if there is no
corresponding standard colour specification.</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>

</refentry>
